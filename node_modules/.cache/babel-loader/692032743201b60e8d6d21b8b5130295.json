{"ast":null,"code":"var _jsxFileName = \"/Users/shakur/www/qualifiedChallenges/Flashcard_App/src/Layout/Decks/EditCard.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useHistory, useParams } from 'react-router-dom';\nimport { updateCard, readDeck, readCard } from '../../utils/api/index.js';\n\nfunction EditCard({\n  updateDecks\n}) {\n  const [deck, setDeck] = useState([]);\n  const [card, editCard] = useState({\n    front: \"\",\n    back: \"\",\n    deckId: \"\"\n  });\n  const {\n    deckId,\n    cardId\n  } = useParams();\n  const history = useHistory();\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    const cardInfo = async () => {\n      const response = await readCard(cardId, abortController.signal);\n      editCard(() => response);\n    };\n\n    cardInfo();\n    return () => abortController.abort();\n  }, [cardId]);\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    const deckInfo = async () => {\n      const response = await readDeck(deckId, abortController.signal);\n      setDeck(() => response);\n    };\n\n    deckInfo();\n    return () => abortController.abort();\n  }, [deckId]);\n\n  const formChange = ({\n    target\n  }) => {\n    editCard({ ...card,\n      [target.name]: target.value\n    });\n  };\n\n  const formSubmit = async event => {\n    event.preventDefault();\n    await updateCard(card);\n    history.push(`/decks/${deck.id}`);\n    updateDecks(1);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-9 mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"nav\", {\n    \"aria-label\": \"breadcrumb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"ol\", {\n    className: \"breadcrumb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"breadcrumb-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-home\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 68\n    }\n  }), \" Home\")), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"breadcrumb-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/decks/${deckId}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 53\n    }\n  }, deck.name)), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"breadcrumb-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, \"Edit Card \", cardId))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row pl-3 pb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, \"Edit Card\")), /*#__PURE__*/React.createElement(CardForm, {\n    formSubmit: formSubmit,\n    formChange: formChange,\n    card: card,\n    deckId: deckId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default EditCard;","map":{"version":3,"sources":["/Users/shakur/www/qualifiedChallenges/Flashcard_App/src/Layout/Decks/EditCard.js"],"names":["React","useEffect","useState","Link","useHistory","useParams","updateCard","readDeck","readCard","EditCard","updateDecks","deck","setDeck","card","editCard","front","back","deckId","cardId","history","abortController","AbortController","cardInfo","response","signal","abort","deckInfo","formChange","target","name","value","formSubmit","event","preventDefault","push","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link, useHistory, useParams } from 'react-router-dom';\nimport { updateCard, readDeck, readCard } from '../../utils/api/index.js'\n\nfunction EditCard({updateDecks}) {\n    const [deck, setDeck] = useState([]);\n    const [card, editCard] = useState({front: \"\", back: \"\", deckId: \"\"});\n    const {deckId, cardId} = useParams();\n    const history = useHistory();\n\n    useEffect(() => {\n        const abortController = new AbortController();\n\n        const cardInfo = async () => {\n            const response = await readCard(cardId, abortController.signal);\n            editCard(() => response);\n        };\n        cardInfo();\n        return () => abortController.abort();\n    }, [cardId])\n\n    useEffect(() => {\n        const abortController = new AbortController();\n\n        const deckInfo = async () => {\n            const response = await readDeck(deckId, abortController.signal);\n            setDeck(() => response);\n        };\n        deckInfo();\n        return () => abortController.abort();\n    }, [deckId])\n\n    const formChange = ({ target }) => {\n        editCard({...card, [target.name]: target.value});\n    }\n    \n    const formSubmit = async (event) => {\n        event.preventDefault();\n        await updateCard(card);\n        history.push(`/decks/${deck.id}`);\n        updateDecks(1);\n    }\n\n    return (\n        <div className=\"col-9 mx-auto\">\n            <nav aria-label=\"breadcrumb\">\n                <ol className=\"breadcrumb\">\n                    <li className=\"breadcrumb-item\"><Link to={\"/\"}><i className=\"fa fa-home\" aria-hidden=\"true\"></i> Home</Link></li>\n                    <li className=\"breadcrumb-item\"><Link to={`/decks/${deckId}`}>{deck.name}</Link></li>\n                    <li className=\"breadcrumb-item\">Edit Card {cardId}</li>\n                </ol>\n            </nav>\n            <div className=\"row pl-3 pb-2\">\n                <h1>Edit Card</h1>\n            </div>\n            <CardForm formSubmit={formSubmit} formChange={formChange} card={card} deckId={deckId} />\n        </div>\n    )\n}\n\nexport default EditCard;\n                "]},"metadata":{},"sourceType":"module"}