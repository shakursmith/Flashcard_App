{"ast":null,"code":"var _jsxFileName = \"/Users/shakur/www/qualifiedChallenges/Flashcard_App/src/Layout/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport NotFound from \"./NotFound\";\nimport DeckList from \"./DeckList\";\nimport Study from \"./Study\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { listDecks } from '../utils/api/index.js';\n\nfunction Layout() {\n  const [decks, setDecks] = useState([]);\n  useEffect(() => {\n    const getDecks = async () => {\n      const decksFromApi = await listDecks();\n      setDecks(() => decksFromApi);\n    };\n\n    getDecks();\n  }, []);\n\n  if (!decks) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spinner-border text-primary\",\n      role: \"status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"sr-only\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 12\n      }\n    }, \"Loading...\"));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row w-75 mx-auto flex-column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-secondary w-25 mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-plus\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 79\n      }\n    }), \" Create Deck\"), decks.map(deck => /*#__PURE__*/React.createElement(DeckList, {\n      key: deck.id,\n      deck: deck,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 38\n      }\n    })))), /*#__PURE__*/React.createElement(Route, {\n      path: \"/decks/:deckId/study\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Study, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/decks/new\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NotFound, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }\n    })))));\n  }\n}\n\nexport default Layout;","map":{"version":3,"sources":["/Users/shakur/www/qualifiedChallenges/Flashcard_App/src/Layout/index.js"],"names":["React","useState","useEffect","Header","NotFound","DeckList","Study","Switch","Route","listDecks","Layout","decks","setDecks","getDecks","decksFromApi","map","deck","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,kBAA9B;AACA,SAASC,SAAT,QAA0B,uBAA1B;;AAGA,SAASC,MAAT,GAAkB;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,QAAQ,GAAG,YAAY;AAC3B,YAAMC,YAAY,GAAG,MAAML,SAAS,EAApC;AACEG,MAAAA,QAAQ,CAAC,MAAME,YAAP,CAAR;AACC,KAHL;;AAIAD,IAAAA,QAAQ;AACT,GANQ,EAMN,EANM,CAAT;;AAQA,MAAI,CAACF,KAAL,EAAY;AACV,wBACI;AAAK,MAAA,SAAS,EAAC,6BAAf;AAA6C,MAAA,IAAI,EAAC,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG;AAAM,MAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADH,CADJ;AAKD,GAND,MAMO;AACL,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,KAAK,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,6BAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA8D;AAAG,MAAA,SAAS,EAAC,YAAb;AAA0B,qBAAY,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA9D,iBADF,EAEGA,KAAK,CAACI,GAAN,CAAWC,IAAD,iBAAU,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,IAAI,CAACC,EAApB;AAAwB,MAAA,IAAI,EAAED,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAApB,CAFH,CADF,CADF,eAOE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,sBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAPF,eAUE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,YAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,eAaE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAbF,CAFF,CAFF,CADF;AAwBE;AACL;;AAED,eAAeN,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport NotFound from \"./NotFound\";\nimport DeckList from \"./DeckList\";\nimport Study from \"./Study\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { listDecks } from '../utils/api/index.js'\n\n\nfunction Layout() {\n  const [decks, setDecks] = useState([]);\n\n  useEffect(() => { \n    const getDecks = async () => { \n      const decksFromApi = await listDecks();\n        setDecks(() => decksFromApi) \n        } \n    getDecks(); \n  }, [])\n\n  if (!decks) {\n    return (\n        <div className=\"spinner-border text-primary\" role=\"status\">\n           <span className=\"sr-only\">Loading...</span>\n        </div>\n    )\n  } else {\n    return (\n      <div>\n        <Header />\n        <div className=\"container\">\n          {/* TODO: Implement the screen starting here */}\n          <Switch>\n            <Route path=\"/\" exact>\n              <div className=\"row w-75 mx-auto flex-column\">\n                <button type=\"button\" className=\"btn btn-secondary w-25 mb-3\"><i className=\"fa fa-plus\" aria-hidden=\"true\"></i> Create Deck</button>\n                {decks.map((deck) => <DeckList key={deck.id} deck={deck} />)}\n              </div>\n            </Route>\n            <Route path=\"/decks/:deckId/study\">\n              <Study />\n            </Route>\n            <Route path=\"/decks/new\">\n              \n            </Route>\n            <Route>\n              <NotFound />  \n            </Route>\n          </Switch>\n        </div>\n      </div>\n    )}\n}\n\nexport default Layout;\n"]},"metadata":{},"sourceType":"module"}