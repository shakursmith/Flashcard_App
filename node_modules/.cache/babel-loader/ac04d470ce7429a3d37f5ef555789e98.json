{"ast":null,"code":"var _jsxFileName = \"/Users/shakur/www/qualifiedChallenges/Flashcard_App/src/Layout/Study/CardList.js\";\nimport React, { useState } from 'react';\nimport { Link, useHistory, useParams } from 'react-router-dom';\n\nfunction CardList({\n  cards\n}) {\n  const [currentCard, setCurrentCard] = useState(0);\n  const [frontSide, setFrontSide] = useState(true);\n  const {\n    deckId\n  } = useParams();\n  const history = useHistory();\n\n  const nextHandler = () => {\n    if (currentCard === cards.length - 1) {\n      window.confirm(\"Click OK to restart the deck, or CANCEL to return to the homepage.\") ? setCurrentCard(() => 0) : history.push(\"/\");\n    } else {\n      setCurrentCard(currentCard => currentCard + 1);\n      setFrontSide(() => !frontSide);\n    }\n  };\n\n  const flipHandler = () => {\n    setFrontSide(() => !frontSide);\n  };\n\n  if (cards.length > 2) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row p-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 25\n      }\n    }, \"Card \", currentCard + 1, \" of \", cards.length), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"card-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 25\n      }\n    }, frontSide ? cards[currentCard].front : cards[currentCard].back), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: flipHandler,\n      className: \"btn btn-secondary mr-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 25\n      }\n    }, \"Flip\"), frontSide ? null : /*#__PURE__*/React.createElement(\"button\", {\n      onClick: nextHandler,\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 45\n      }\n    }, \"Next\"))));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row p-3 w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }\n    }, \"Not enough cards.\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"card-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }\n    }, \"You need at least 3 cards to study. There are \", cards.length, \" cards in this deck.\"), /*#__PURE__*/React.createElement(Link, {\n      to: `/decks/${deckId}/cards/new`,\n      className: \"btn btn-primary ml-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-plus\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 98\n      }\n    }), \" Add Cards\"))));\n  }\n}\n\nexport default CardList;","map":{"version":3,"sources":["/Users/shakur/www/qualifiedChallenges/Flashcard_App/src/Layout/Study/CardList.js"],"names":["React","useState","Link","useHistory","useParams","CardList","cards","currentCard","setCurrentCard","frontSide","setFrontSide","deckId","history","nextHandler","length","window","confirm","push","flipHandler","front","back"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Link, useHistory, useParams } from 'react-router-dom';\n\n\nfunction CardList({ cards }) {\n    const [currentCard, setCurrentCard] = useState(0);\n    const [frontSide, setFrontSide] = useState(true);\n    const {deckId} = useParams();\n    const history = useHistory();\n    \n    const nextHandler = () => {\n        if (currentCard === (cards.length-1)) {\n            window.confirm(\"Click OK to restart the deck, or CANCEL to return to the homepage.\")\n            ? setCurrentCard(() => 0) \n            : history.push(\"/\");  \n        } else {\n            setCurrentCard((currentCard) => currentCard+1);\n            setFrontSide(() => !frontSide)\n        }\n    }\n\n    const flipHandler = () => {\n        setFrontSide(() => !frontSide)\n    }\n \n    if (cards.length > 2) { \n        return (\n            <div className=\"row p-3\">\n                <div className=\"card w-100\">\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">Card {currentCard+1} of {cards.length}</h5>\n                        <p className=\"card-text\">{frontSide ? cards[currentCard].front : cards[currentCard].back}</p>\n                        <button onClick={flipHandler} className=\"btn btn-secondary mr-3\">Flip</button>\n                        {frontSide ? null : <button onClick={nextHandler} className=\"btn btn-primary\">Next</button>}\n                        {/* <button onClick={nextHandler} className=\"btn btn-primary\">Next</button> */}\n                    </div>\n                </div>\n            </div>\n        )\n    } else {\n        return (\n            <div className=\"row p-3 w-100\">\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">Not enough cards.</h5>\n                        <p className=\"card-text\">\n                            You need at least 3 cards to study. There are {cards.length} cards in this deck.\n                        </p>\n                        <Link to={`/decks/${deckId}/cards/new`} className=\"btn btn-primary ml-3\"><i className=\"fa fa-plus\" aria-hidden=\"true\"></i> Add Cards</Link>\n                    </div>\n                </div>\n            </div>\n        )    \n    }\n}\n\nexport default CardList;\n"]},"metadata":{},"sourceType":"module"}